<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.loto.dao.TransFlowMapper" >
  <resultMap id="BaseResultMap" type="com.loto.model.TransFlow" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="trans_type" property="transType" jdbcType="VARCHAR" />
    <result column="trans_for" property="transFor" jdbcType="BIGINT" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="mission_id" property="missionId" jdbcType="BIGINT" />
    <result column="trading_id" property="tradingId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="data_status" property="dataStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, trans_type, trans_for, amount, mission_id, trading_id, user_id, create_time, 
    data_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.loto.model.TransFlowExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trans_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from trans_flow
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from trans_flow
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.loto.model.TransFlowExample" >
    delete from trans_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.loto.model.TransFlow" >
    insert into trans_flow (id, trans_type, trans_for, 
      amount, mission_id, trading_id, 
      user_id, create_time, data_status
      )
    values (#{id,jdbcType=BIGINT}, #{transType,jdbcType=VARCHAR}, #{transFor,jdbcType=BIGINT}, 
      #{amount,jdbcType=DECIMAL}, #{missionId,jdbcType=BIGINT}, #{tradingId,jdbcType=BIGINT}, 
      #{userId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{dataStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.loto.model.TransFlow" >
    insert into trans_flow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="transType != null" >
        trans_type,
      </if>
      <if test="transFor != null" >
        trans_for,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="missionId != null" >
        mission_id,
      </if>
      <if test="tradingId != null" >
        trading_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="dataStatus != null" >
        data_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="transType != null" >
        #{transType,jdbcType=VARCHAR},
      </if>
      <if test="transFor != null" >
        #{transFor,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="missionId != null" >
        #{missionId,jdbcType=BIGINT},
      </if>
      <if test="tradingId != null" >
        #{tradingId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataStatus != null" >
        #{dataStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.loto.model.TransFlowExample" resultType="java.lang.Integer" >
    select count(*) from trans_flow
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update trans_flow
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.transType != null" >
        trans_type = #{record.transType,jdbcType=VARCHAR},
      </if>
      <if test="record.transFor != null" >
        trans_for = #{record.transFor,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=DECIMAL},
      </if>
      <if test="record.missionId != null" >
        mission_id = #{record.missionId,jdbcType=BIGINT},
      </if>
      <if test="record.tradingId != null" >
        trading_id = #{record.tradingId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataStatus != null" >
        data_status = #{record.dataStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update trans_flow
    set id = #{record.id,jdbcType=BIGINT},
      trans_type = #{record.transType,jdbcType=VARCHAR},
      trans_for = #{record.transFor,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=DECIMAL},
      mission_id = #{record.missionId,jdbcType=BIGINT},
      trading_id = #{record.tradingId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      data_status = #{record.dataStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.loto.model.TransFlow" >
    update trans_flow
    <set >
      <if test="transType != null" >
        trans_type = #{transType,jdbcType=VARCHAR},
      </if>
      <if test="transFor != null" >
        trans_for = #{transFor,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="missionId != null" >
        mission_id = #{missionId,jdbcType=BIGINT},
      </if>
      <if test="tradingId != null" >
        trading_id = #{tradingId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataStatus != null" >
        data_status = #{dataStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.loto.model.TransFlow" >
    update trans_flow
    set trans_type = #{transType,jdbcType=VARCHAR},
      trans_for = #{transFor,jdbcType=BIGINT},
      amount = #{amount,jdbcType=DECIMAL},
      mission_id = #{missionId,jdbcType=BIGINT},
      trading_id = #{tradingId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      data_status = #{dataStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>