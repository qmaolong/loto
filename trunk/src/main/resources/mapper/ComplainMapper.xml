<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.loto.dao.ComplainMapper" >
  <resultMap id="BaseResultMap" type="com.loto.model.Complain" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="mission_id" property="missionId" jdbcType="BIGINT" />
    <result column="buyer_id" property="buyerId" jdbcType="BIGINT" />
    <result column="seller_id" property="sellerId" jdbcType="BIGINT" />
    <result column="complain_type" property="complainType" jdbcType="VARCHAR" />
    <result column="expired_time" property="expiredTime" jdbcType="TIMESTAMP" />
    <result column="deal_result" property="dealResult" jdbcType="BIGINT" />
    <result column="deal_reason" property="dealReason" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="data_status" property="dataStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, mission_id, buyer_id, seller_id, complain_type, expired_time, deal_result, deal_reason, 
    status, create_time, data_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.loto.model.ComplainExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from complain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from complain
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from complain
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.loto.model.ComplainExample" >
    delete from complain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.loto.model.Complain" >
    insert into complain (id, mission_id, buyer_id, 
      seller_id, complain_type, expired_time, 
      deal_result, deal_reason, status, 
      create_time, data_status)
    values (#{id,jdbcType=BIGINT}, #{missionId,jdbcType=BIGINT}, #{buyerId,jdbcType=BIGINT}, 
      #{sellerId,jdbcType=BIGINT}, #{complainType,jdbcType=VARCHAR}, #{expiredTime,jdbcType=TIMESTAMP}, 
      #{dealResult,jdbcType=BIGINT}, #{dealReason,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{dataStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.loto.model.Complain" >
    insert into complain
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="missionId != null" >
        mission_id,
      </if>
      <if test="buyerId != null" >
        buyer_id,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="complainType != null" >
        complain_type,
      </if>
      <if test="expiredTime != null" >
        expired_time,
      </if>
      <if test="dealResult != null" >
        deal_result,
      </if>
      <if test="dealReason != null" >
        deal_reason,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="dataStatus != null" >
        data_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="missionId != null" >
        #{missionId,jdbcType=BIGINT},
      </if>
      <if test="buyerId != null" >
        #{buyerId,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="complainType != null" >
        #{complainType,jdbcType=VARCHAR},
      </if>
      <if test="expiredTime != null" >
        #{expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealResult != null" >
        #{dealResult,jdbcType=BIGINT},
      </if>
      <if test="dealReason != null" >
        #{dealReason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataStatus != null" >
        #{dataStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.loto.model.ComplainExample" resultType="java.lang.Integer" >
    select count(*) from complain
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update complain
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.missionId != null" >
        mission_id = #{record.missionId,jdbcType=BIGINT},
      </if>
      <if test="record.buyerId != null" >
        buyer_id = #{record.buyerId,jdbcType=BIGINT},
      </if>
      <if test="record.sellerId != null" >
        seller_id = #{record.sellerId,jdbcType=BIGINT},
      </if>
      <if test="record.complainType != null" >
        complain_type = #{record.complainType,jdbcType=VARCHAR},
      </if>
      <if test="record.expiredTime != null" >
        expired_time = #{record.expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dealResult != null" >
        deal_result = #{record.dealResult,jdbcType=BIGINT},
      </if>
      <if test="record.dealReason != null" >
        deal_reason = #{record.dealReason,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.dataStatus != null" >
        data_status = #{record.dataStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update complain
    set id = #{record.id,jdbcType=BIGINT},
      mission_id = #{record.missionId,jdbcType=BIGINT},
      buyer_id = #{record.buyerId,jdbcType=BIGINT},
      seller_id = #{record.sellerId,jdbcType=BIGINT},
      complain_type = #{record.complainType,jdbcType=VARCHAR},
      expired_time = #{record.expiredTime,jdbcType=TIMESTAMP},
      deal_result = #{record.dealResult,jdbcType=BIGINT},
      deal_reason = #{record.dealReason,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      data_status = #{record.dataStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.loto.model.Complain" >
    update complain
    <set >
      <if test="missionId != null" >
        mission_id = #{missionId,jdbcType=BIGINT},
      </if>
      <if test="buyerId != null" >
        buyer_id = #{buyerId,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="complainType != null" >
        complain_type = #{complainType,jdbcType=VARCHAR},
      </if>
      <if test="expiredTime != null" >
        expired_time = #{expiredTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dealResult != null" >
        deal_result = #{dealResult,jdbcType=BIGINT},
      </if>
      <if test="dealReason != null" >
        deal_reason = #{dealReason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dataStatus != null" >
        data_status = #{dataStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.loto.model.Complain" >
    update complain
    set mission_id = #{missionId,jdbcType=BIGINT},
      buyer_id = #{buyerId,jdbcType=BIGINT},
      seller_id = #{sellerId,jdbcType=BIGINT},
      complain_type = #{complainType,jdbcType=VARCHAR},
      expired_time = #{expiredTime,jdbcType=TIMESTAMP},
      deal_result = #{dealResult,jdbcType=BIGINT},
      deal_reason = #{dealReason,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      data_status = #{dataStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>